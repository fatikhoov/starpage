{"version":3,"file":"common.js","mappings":"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","sources":["webpack://starpage/./node_modules/@firebase/storage/dist/index.esm2017.js","webpack://starpage/./node_modules/@firebase/util/dist/index.esm2017.js","webpack://starpage/./public/js/dev/server.js","webpack://starpage/./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://starpage/./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://starpage/./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://starpage/./node_modules/firebase/app/dist/esm/index.esm.js","webpack://starpage/./node_modules/idb/build/index.js","webpack://starpage/./node_modules/idb/build/wrap-idb-value.js","webpack://starpage/webpack/bootstrap","webpack://starpage/webpack/runtime/define property getters","webpack://starpage/webpack/runtime/global","webpack://starpage/webpack/runtime/hasOwnProperty shorthand","webpack://starpage/webpack/runtime/make namespace object","webpack://starpage/webpack/startup"],"sourcesContent":["import { _getProvider, getApp, _registerComponent, registerVersion, SDK_VERSION } from '@firebase/app';\nimport { FirebaseError, isNode, createMockUserToken, getModularInstance, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nconst DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nconst CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nconst DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nconst DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\r\n/**\r\n * 1 second\r\n */\r\nconst DEFAULT_MIN_SLEEP_TIME_MILLIS = 1000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nclass StorageError extends FirebaseError {\r\n    /**\r\n     * @param code - A `StorageErrorCode` string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     * @param status_ - Corresponding HTTP Status Code\r\n     */\r\n    constructor(code, message, status_ = 0) {\r\n        super(prependCode(code), `Firebase Storage: ${message} (${prependCode(code)})`);\r\n        this.status_ = status_;\r\n        /**\r\n         * Stores custom error data unique to the `StorageError`.\r\n         */\r\n        this.customData = { serverResponse: null };\r\n        this._baseMessage = this.message;\r\n        // Without this, `instanceof StorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(this, StorageError.prototype);\r\n    }\r\n    get status() {\r\n        return this.status_;\r\n    }\r\n    set status(status) {\r\n        this.status_ = status;\r\n    }\r\n    /**\r\n     * Compares a `StorageErrorCode` against this error's code, filtering out the prefix.\r\n     */\r\n    _codeEquals(code) {\r\n        return prependCode(code) === this.code;\r\n    }\r\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\r\n    get serverResponse() {\r\n        return this.customData.serverResponse;\r\n    }\r\n    set serverResponse(serverResponse) {\r\n        this.customData.serverResponse = serverResponse;\r\n        if (this.customData.serverResponse) {\r\n            this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\r\n        }\r\n        else {\r\n            this.message = this._baseMessage;\r\n        }\r\n    }\r\n}\r\n/**\r\n * @public\r\n * Error codes that can be attached to `StorageError` objects.\r\n */\r\nvar StorageErrorCode;\r\n(function (StorageErrorCode) {\r\n    // Shared between all platforms\r\n    StorageErrorCode[\"UNKNOWN\"] = \"unknown\";\r\n    StorageErrorCode[\"OBJECT_NOT_FOUND\"] = \"object-not-found\";\r\n    StorageErrorCode[\"BUCKET_NOT_FOUND\"] = \"bucket-not-found\";\r\n    StorageErrorCode[\"PROJECT_NOT_FOUND\"] = \"project-not-found\";\r\n    StorageErrorCode[\"QUOTA_EXCEEDED\"] = \"quota-exceeded\";\r\n    StorageErrorCode[\"UNAUTHENTICATED\"] = \"unauthenticated\";\r\n    StorageErrorCode[\"UNAUTHORIZED\"] = \"unauthorized\";\r\n    StorageErrorCode[\"UNAUTHORIZED_APP\"] = \"unauthorized-app\";\r\n    StorageErrorCode[\"RETRY_LIMIT_EXCEEDED\"] = \"retry-limit-exceeded\";\r\n    StorageErrorCode[\"INVALID_CHECKSUM\"] = \"invalid-checksum\";\r\n    StorageErrorCode[\"CANCELED\"] = \"canceled\";\r\n    // JS specific\r\n    StorageErrorCode[\"INVALID_EVENT_NAME\"] = \"invalid-event-name\";\r\n    StorageErrorCode[\"INVALID_URL\"] = \"invalid-url\";\r\n    StorageErrorCode[\"INVALID_DEFAULT_BUCKET\"] = \"invalid-default-bucket\";\r\n    StorageErrorCode[\"NO_DEFAULT_BUCKET\"] = \"no-default-bucket\";\r\n    StorageErrorCode[\"CANNOT_SLICE_BLOB\"] = \"cannot-slice-blob\";\r\n    StorageErrorCode[\"SERVER_FILE_WRONG_SIZE\"] = \"server-file-wrong-size\";\r\n    StorageErrorCode[\"NO_DOWNLOAD_URL\"] = \"no-download-url\";\r\n    StorageErrorCode[\"INVALID_ARGUMENT\"] = \"invalid-argument\";\r\n    StorageErrorCode[\"INVALID_ARGUMENT_COUNT\"] = \"invalid-argument-count\";\r\n    StorageErrorCode[\"APP_DELETED\"] = \"app-deleted\";\r\n    StorageErrorCode[\"INVALID_ROOT_OPERATION\"] = \"invalid-root-operation\";\r\n    StorageErrorCode[\"INVALID_FORMAT\"] = \"invalid-format\";\r\n    StorageErrorCode[\"INTERNAL_ERROR\"] = \"internal-error\";\r\n    StorageErrorCode[\"UNSUPPORTED_ENVIRONMENT\"] = \"unsupported-environment\";\r\n})(StorageErrorCode || (StorageErrorCode = {}));\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    const message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new StorageError(StorageErrorCode.UNKNOWN, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new StorageError(StorageErrorCode.OBJECT_NOT_FOUND, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new StorageError(StorageErrorCode.QUOTA_EXCEEDED, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    const message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new StorageError(StorageErrorCode.UNAUTHORIZED_APP, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new StorageError(StorageErrorCode.UNAUTHORIZED, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new StorageError(StorageErrorCode.RETRY_LIMIT_EXCEEDED, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new StorageError(StorageErrorCode.CANCELED, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new StorageError(StorageErrorCode.INVALID_URL, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new StorageError(StorageErrorCode.INVALID_DEFAULT_BUCKET, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new StorageError(StorageErrorCode.NO_DEFAULT_BUCKET, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new StorageError(StorageErrorCode.CANNOT_SLICE_BLOB, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new StorageError(StorageErrorCode.SERVER_FILE_WRONG_SIZE, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new StorageError(StorageErrorCode.NO_DOWNLOAD_URL, 'The given file does not have any download URLs.');\r\n}\r\nfunction missingPolyFill(polyFill) {\r\n    return new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, `${polyFill} is missing. Make sure to install the required polyfills. See https://firebase.google.com/docs/web/environments-js-sdk#polyfills for more information.`);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction invalidArgument(message) {\r\n    return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\r\n}\r\nfunction appDeleted() {\r\n    return new StorageError(StorageErrorCode.APP_DELETED, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n *\r\n * @internal\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new StorageError(StorageErrorCode.INVALID_ROOT_OPERATION, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new StorageError(StorageErrorCode.INVALID_FORMAT, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new StorageError(StorageErrorCode.INTERNAL_ERROR, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nclass Location {\r\n    constructor(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    get path() {\r\n        return this.path_;\r\n    }\r\n    get isRoot() {\r\n        return this.path.length === 0;\r\n    }\r\n    fullServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    }\r\n    bucketOnlyServerUrl() {\r\n        const encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    }\r\n    static makeFromBucketSpec(bucketString, host) {\r\n        let bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    }\r\n    static makeFromUrl(url, host) {\r\n        let location = null;\r\n        const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        const gsPath = '(/(.*))?$';\r\n        const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        const gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        const version = 'v[A-Za-z0-9_]+';\r\n        const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        const firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        const firebaseStorageRegExp = new RegExp(`^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`, 'i');\r\n        const firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        const cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        const cloudStoragePath = '([^?#]*)';\r\n        const cloudStorageRegExp = new RegExp(`^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`, 'i');\r\n        const cloudStorageIndices = { bucket: 1, path: 2 };\r\n        const groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (let i = 0; i < groups.length; i++) {\r\n            const group = groups[i];\r\n            const captures = group.regex.exec(url);\r\n            if (captures) {\r\n                const bucketValue = captures[group.indices.bucket];\r\n                let pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    }\r\n}\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nclass FailRequest {\r\n    constructor(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(_appDelete = false) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Accepts a callback for an action to perform (`doRequest`),\r\n * and then a callback for when the backoff has completed (`backoffCompleteCb`).\r\n * The callback sent to start requires an argument to call (`onRequestComplete`).\r\n * When `start` calls `doRequest`, it passes a callback for when the request has\r\n * completed, `onRequestComplete`. Based on this, the backoff continues, with\r\n * another call to `doRequest` and the above loop continues until the timeout\r\n * is hit, or a successful response occurs.\r\n * @description\r\n * @param doRequest Callback to perform request\r\n * @param backoffCompleteCb Callback to call when backoff has been completed\r\n */\r\nfunction start(doRequest, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nbackoffCompleteCb, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    let waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let retryTimeoutId = null;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    let globalTimeoutId = null;\r\n    let hitTimeout = false;\r\n    let cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    let triggeredCallback = false;\r\n    function triggerCallback(...args) {\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            backoffCompleteCb.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        retryTimeoutId = setTimeout(() => {\r\n            retryTimeoutId = null;\r\n            doRequest(responseHandler, canceled());\r\n        }, millis);\r\n    }\r\n    function clearGlobalTimeout() {\r\n        if (globalTimeoutId) {\r\n            clearTimeout(globalTimeoutId);\r\n        }\r\n    }\r\n    function responseHandler(success, ...args) {\r\n        if (triggeredCallback) {\r\n            clearGlobalTimeout();\r\n            return;\r\n        }\r\n        if (success) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        const mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            clearGlobalTimeout();\r\n            triggerCallback.call(null, success, ...args);\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        let waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    let stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        clearGlobalTimeout();\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (retryTimeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(retryTimeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    globalTimeoutId = setTimeout(() => {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    // Note: The `isNode()` check can be removed when `node-fetch` adds native Blob support\r\n    // PR: https://github.com/node-fetch/node-fetch/pull/1664\r\n    return typeof Blob !== 'undefined' && !isNode();\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${minValue} or greater.`);\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(`Invalid value for '${argument}'. Expected ${maxValue} or less.`);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host, protocol) {\r\n    let origin = host;\r\n    if (protocol == null) {\r\n        origin = `https://${host}`;\r\n    }\r\n    return `${protocol}://${origin}/v0${urlPart}`;\r\n}\r\nfunction makeQueryString(params) {\r\n    const encode = encodeURIComponent;\r\n    let queryPart = '?';\r\n    for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            const nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Checks the status code to see if the action should be retried.\r\n *\r\n * @param status Current HTTP status code returned by server.\r\n * @param additionalRetryCodes additional retry codes to check against\r\n */\r\nfunction isRetryStatusCode(status, additionalRetryCodes) {\r\n    // The codes for which to retry came from this page:\r\n    // https://cloud.google.com/storage/docs/exponential-backoff\r\n    const isFiveHundredCode = status >= 500 && status < 600;\r\n    const extraRetryCodes = [\r\n        // Request Timeout: web server didn't receive full request in time.\r\n        408,\r\n        // Too Many Requests: you're getting rate-limited, basically.\r\n        429\r\n    ];\r\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n    const isAdditionalRetryCode = additionalRetryCodes.indexOf(status) !== -1;\r\n    return isFiveHundredCode || isExtraRetryCode || isAdditionalRetryCode;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Handles network logic for all Storage Requests, including error reporting and\r\n * retries with backoff.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param - O the output type used by the rest of the SDK. The conversion\r\n * happens in the specified `callback_`.\r\n */\r\nclass NetworkRequest {\r\n    constructor(url_, method_, headers_, body_, successCodes_, additionalRetryCodes_, callback_, errorCallback_, timeout_, progressCallback_, connectionFactory_, retry = true) {\r\n        this.url_ = url_;\r\n        this.method_ = method_;\r\n        this.headers_ = headers_;\r\n        this.body_ = body_;\r\n        this.successCodes_ = successCodes_;\r\n        this.additionalRetryCodes_ = additionalRetryCodes_;\r\n        this.callback_ = callback_;\r\n        this.errorCallback_ = errorCallback_;\r\n        this.timeout_ = timeout_;\r\n        this.progressCallback_ = progressCallback_;\r\n        this.connectionFactory_ = connectionFactory_;\r\n        this.retry = retry;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.promise_ = new Promise((resolve, reject) => {\r\n            this.resolve_ = resolve;\r\n            this.reject_ = reject;\r\n            this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    start_() {\r\n        const doTheRequest = (backoffCallback, canceled) => {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            const connection = this.connectionFactory_();\r\n            this.pendingConnection_ = connection;\r\n            const progressListener = progressEvent => {\r\n                const loaded = progressEvent.loaded;\r\n                const total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (this.progressCallback_ !== null) {\r\n                    this.progressCallback_(loaded, total);\r\n                }\r\n            };\r\n            if (this.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(this.url_, this.method_, this.body_, this.headers_)\r\n                .then(() => {\r\n                if (this.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                this.pendingConnection_ = null;\r\n                const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                const status = connection.getStatus();\r\n                if (!hitServer ||\r\n                    (isRetryStatusCode(status, this.additionalRetryCodes_) &&\r\n                        this.retry)) {\r\n                    const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                const successCode = this.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        };\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        const backoffDone = (requestWentThrough, status) => {\r\n            const resolve = this.resolve_;\r\n            const reject = this.reject_;\r\n            const connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    const result = this.callback_(connection, connection.getResponse());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    const err = unknown();\r\n                    err.serverResponse = connection.getErrorText();\r\n                    if (this.errorCallback_) {\r\n                        reject(this.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        const err = this.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        const err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getPromise() {\r\n        return this.promise_;\r\n    }\r\n    /** @inheritDoc */\r\n    cancel(appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    }\r\n}\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nclass RequestEndStatus {\r\n    constructor(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n}\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, requestFactory, firebaseVersion, retry = true) {\r\n    const queryPart = makeQueryString(requestInfo.urlParams);\r\n    const url = requestInfo.url + queryPart;\r\n    const headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, requestFactory, retry);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob$1(...args) {\r\n    const BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        const bb = new BlobBuilder();\r\n        for (let i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    if (typeof atob === 'undefined') {\r\n        throw missingPolyFill('base-64');\r\n    }\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nconst StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nclass StringData {\r\n    constructor(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    const b = [];\r\n    for (let i = 0; i < value.length; i++) {\r\n        let c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    const valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        const hi = c;\r\n                        const lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    let decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            const hasMinus = value.indexOf('-') !== -1;\r\n            const hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                const invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            const hasPlus = value.indexOf('+') !== -1;\r\n            const hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                const invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    let bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        if (e.message.includes('polyfill')) {\r\n            throw e;\r\n        }\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    const array = new Uint8Array(bytes.length);\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nclass DataURLParts {\r\n    constructor(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        const matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        const middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n}\r\nfunction dataURLBytes_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    const parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    const longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nclass FbsBlob {\r\n    constructor(data, elideCopy) {\r\n        let size = 0;\r\n        let blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    size() {\r\n        return this.size_;\r\n    }\r\n    type() {\r\n        return this.type_;\r\n    }\r\n    slice(startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            const realBlob = this.data_;\r\n            const sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            const slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    }\r\n    static getBlob(...args) {\r\n        if (isNativeBlobDefined()) {\r\n            const blobby = args.map((val) => {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob$1.apply(null, blobby));\r\n        }\r\n        else {\r\n            const uint8Arrays = args.map((val) => {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            let finalLength = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                finalLength += array.byteLength;\r\n            });\r\n            const merged = new Uint8Array(finalLength);\r\n            let index = 0;\r\n            uint8Arrays.forEach((array) => {\r\n                for (let i = 0; i < array.length; i++) {\r\n                    merged[index++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged, true);\r\n        }\r\n    }\r\n    uploadData() {\r\n        return this.data_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    let obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    const index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    const newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    const canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(component => component.length > 0)\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    const index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nclass Mapping {\r\n    constructor(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n}\r\nlet mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    const mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    const nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    const sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    const metadata = {};\r\n    metadata['type'] = 'file';\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host, protocol) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    const tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    const encode = encodeURIComponent;\r\n    const tokensList = tokens.split(',');\r\n    const urls = tokensList.map((token) => {\r\n        const bucket = metadata['bucket'];\r\n        const path = metadata['fullPath'];\r\n        const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        const base = makeUrl(urlPart, host, protocol);\r\n        const queryString = makeQueryString({\r\n            alt: 'media',\r\n            token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    const resource = {};\r\n    const len = mappings.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PREFIXES_KEY = 'prefixes';\r\nconst ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    const listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (const path of resource[PREFIXES_KEY]) {\r\n            const pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            const reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (const item of resource[ITEMS_KEY]) {\r\n            const reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    const obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    const resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\n/**\r\n * Contains a fully specified request.\r\n *\r\n * @param I - the type of the backend's network response.\r\n * @param O - the output response type used by the rest of the SDK.\r\n */\r\nclass RequestInfo {\r\n    constructor(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN StorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        const listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        const metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host, service._protocol);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        let newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getErrorText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.status = xhr.getStatus();\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    const shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        let newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    const urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getBytes$1(service, location, maxDownloadSizeBytes) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol) + '?alt=media';\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, (_, data) => data, timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    if (maxDownloadSizeBytes !== undefined) {\r\n        requestInfo.headers['Range'] = `bytes=0-${maxDownloadSizeBytes}`;\r\n        requestInfo.successCodes = [200 /* OK */, 206 /* Partial Content */];\r\n    }\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'GET';\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'PATCH';\r\n    const body = toResourceString(metadata, mappings);\r\n    const headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    const timeout = service.maxOperationRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    const urlPart = location.fullServerUrl();\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'DELETE';\r\n    const timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    const metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        let str = '';\r\n        for (let i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    const boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    const metadata_ = metadataForUpload_(location, blob, metadata);\r\n    const metadataString = toResourceString(metadata_, mappings);\r\n    const preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    const postBlobPart = '\\r\\n--' + boundary + '--';\r\n    const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    const urlParams = { name: metadata_['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nclass ResumableUploadStatus {\r\n    constructor(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n}\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    let status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    const allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    const urlPart = location.bucketOnlyServerUrl();\r\n    const metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    const urlParams = { name: metadataForUpload['fullPath'] };\r\n    const url = makeUrl(urlPart, service.host, service._protocol);\r\n    const method = 'POST';\r\n    const headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    const body = toResourceString(metadataForUpload, mappings);\r\n    const timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        let url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    const headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        const status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        let sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        const size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nconst RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    const status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    const bytesLeft = status_.total - status_.current;\r\n    let bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    const startByte = status_.current;\r\n    const endByte = startByte + bytesToUpload;\r\n    let uploadCommand = '';\r\n    if (bytesToUpload === 0) {\r\n        uploadCommand = 'finalize';\r\n    }\r\n    else if (bytesLeft === bytesToUpload) {\r\n        uploadCommand = 'upload, finalize';\r\n    }\r\n    else {\r\n        uploadCommand = 'upload';\r\n    }\r\n    const headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': `${status_.current}`\r\n    };\r\n    const body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        const newCurrent = status_.current + bytesToUpload;\r\n        const size = blob.size();\r\n        let metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    const method = 'POST';\r\n    const timeout = service.maxUploadRetryTime;\r\n    const requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n * @internal\r\n */\r\nconst TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n// type keys = keyof TaskState\r\n/**\r\n * Represents the current state of a running upload.\r\n * @internal\r\n */\r\nconst TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* InternalTaskState.RUNNING */:\r\n        case \"pausing\" /* InternalTaskState.PAUSING */:\r\n        case \"canceling\" /* InternalTaskState.CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* InternalTaskState.PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* InternalTaskState.SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* InternalTaskState.CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* InternalTaskState.ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Observer {\r\n    constructor(nextOrObserver, error, complete) {\r\n        const asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error !== null && error !== void 0 ? error : undefined;\r\n            this.complete = complete !== null && complete !== void 0 ? complete : undefined;\r\n        }\r\n        else {\r\n            const observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return (...argsToForward) => {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(() => f(...argsToForward));\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** An override for the text-based Connection. Used in tests. */\r\nlet textFactoryOverride = null;\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nclass XhrConnection {\r\n    constructor() {\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.initXhr();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(resolve => {\r\n            this.xhr_.addEventListener('abort', () => {\r\n                this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('error', () => {\r\n                this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            this.xhr_.addEventListener('load', () => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    send(url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (const key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    }\r\n    getErrorCode() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    }\r\n    getStatus() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    }\r\n    getResponse() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponse() before sending');\r\n        }\r\n        return this.xhr_.response;\r\n    }\r\n    getErrorText() {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorText() before sending');\r\n        }\r\n        return this.xhr_.statusText;\r\n    }\r\n    /** Aborts the request. */\r\n    abort() {\r\n        this.xhr_.abort();\r\n    }\r\n    getResponseHeader(header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    }\r\n    addUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    }\r\n    removeUploadProgressListener(listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    }\r\n}\r\nclass XhrTextConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'text';\r\n    }\r\n}\r\nfunction newTextConnection() {\r\n    return textFactoryOverride ? textFactoryOverride() : new XhrTextConnection();\r\n}\r\nclass XhrBytesConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'arraybuffer';\r\n    }\r\n}\r\nfunction newBytesConnection() {\r\n    return new XhrBytesConnection();\r\n}\r\nclass XhrBlobConnection extends XhrConnection {\r\n    initXhr() {\r\n        this.xhr_.responseType = 'blob';\r\n    }\r\n}\r\nfunction newBlobConnection() {\r\n    return new XhrBlobConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nclass UploadTask {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    constructor(ref, blob, metadata = null) {\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* InternalTaskState.RUNNING */;\r\n        this._errorHandler = error => {\r\n            this._request = undefined;\r\n            this._chunkMultiplier = 1;\r\n            if (error._codeEquals(StorageErrorCode.CANCELED)) {\r\n                this._needToFetchStatus = true;\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                const backoffExpired = this.isExponentialBackoffExpired();\r\n                if (isRetryStatusCode(error.status, [])) {\r\n                    if (backoffExpired) {\r\n                        error = retryLimitExceeded();\r\n                    }\r\n                    else {\r\n                        this.sleepTime = Math.max(this.sleepTime * 2, DEFAULT_MIN_SLEEP_TIME_MILLIS);\r\n                        this._needToFetchStatus = true;\r\n                        this.completeTransitions_();\r\n                        return;\r\n                    }\r\n                }\r\n                this._error = error;\r\n                this._transition(\"error\" /* InternalTaskState.ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = error => {\r\n            this._request = undefined;\r\n            if (error._codeEquals(StorageErrorCode.CANCELED)) {\r\n                this.completeTransitions_();\r\n            }\r\n            else {\r\n                this._error = error;\r\n                this._transition(\"error\" /* InternalTaskState.ERROR */);\r\n            }\r\n        };\r\n        this.sleepTime = 0;\r\n        this.maxSleepTime = this._ref.storage.maxUploadRetryTime;\r\n        this._promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n            this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, () => { });\r\n    }\r\n    isExponentialBackoffExpired() {\r\n        return this.sleepTime > this.maxSleepTime;\r\n    }\r\n    _makeProgressCallback() {\r\n        const sizeBefore = this._transferred;\r\n        return loaded => this._updateProgress(sizeBefore + loaded);\r\n    }\r\n    _shouldDoResumable(blob) {\r\n        return blob.size() > 256 * 1024;\r\n    }\r\n    _start() {\r\n        if (this._state !== \"running\" /* InternalTaskState.RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this.pendingTimeout = setTimeout(() => {\r\n                            this.pendingTimeout = undefined;\r\n                            this._continueUpload();\r\n                        }, this.sleepTime);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    }\r\n    _resolveToken(callback) {\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            switch (this._state) {\r\n                case \"running\" /* InternalTaskState.RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* InternalTaskState.CANCELING */:\r\n                    this._transition(\"canceled\" /* InternalTaskState.CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* InternalTaskState.PAUSING */:\r\n                    this._transition(\"paused\" /* InternalTaskState.PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    // TODO(andysoto): assert false\r\n    _createResumable() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = createResumableUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const createRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = createRequest;\r\n            createRequest.getPromise().then((url) => {\r\n                this._request = undefined;\r\n                this._uploadUrl = url;\r\n                this._needToFetchStatus = false;\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _fetchStatus() {\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getResumableUploadStatus(this._ref.storage, this._ref._location, url, this._blob);\r\n            const statusRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = statusRequest;\r\n            statusRequest.getPromise().then(status => {\r\n                status = status;\r\n                this._request = undefined;\r\n                this._updateProgress(status.current);\r\n                this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    this._needToFetchMetadata = true;\r\n                }\r\n                this.completeTransitions_();\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _continueUpload() {\r\n        const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        const status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        const url = this._uploadUrl;\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            let requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(this._ref._location, this._ref.storage, url, this._blob, chunkSize, this._mappings, status, this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                this._error = e;\r\n                this._transition(\"error\" /* InternalTaskState.ERROR */);\r\n                return;\r\n            }\r\n            const uploadRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken, \r\n            /*retry=*/ false // Upload requests should not be retried as each retry should be preceded by another query request. Which is handled in this file.\r\n            );\r\n            this._request = uploadRequest;\r\n            uploadRequest.getPromise().then((newStatus) => {\r\n                this._increaseMultiplier();\r\n                this._request = undefined;\r\n                this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    this._metadata = newStatus.metadata;\r\n                    this._transition(\"success\" /* InternalTaskState.SUCCESS */);\r\n                }\r\n                else {\r\n                    this.completeTransitions_();\r\n                }\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _increaseMultiplier() {\r\n        const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize * 2 < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    }\r\n    _fetchMetadata() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = getMetadata$2(this._ref.storage, this._ref._location, this._mappings);\r\n            const metadataRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._transition(\"success\" /* InternalTaskState.SUCCESS */);\r\n            }, this._metadataErrorHandler);\r\n        });\r\n    }\r\n    _oneShotUpload() {\r\n        this._resolveToken((authToken, appCheckToken) => {\r\n            const requestInfo = multipartUpload(this._ref.storage, this._ref._location, this._mappings, this._blob, this._metadata);\r\n            const multipartRequest = this._ref.storage._makeRequest(requestInfo, newTextConnection, authToken, appCheckToken);\r\n            this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(metadata => {\r\n                this._request = undefined;\r\n                this._metadata = metadata;\r\n                this._updateProgress(this._blob.size());\r\n                this._transition(\"success\" /* InternalTaskState.SUCCESS */);\r\n            }, this._errorHandler);\r\n        });\r\n    }\r\n    _updateProgress(transferred) {\r\n        const old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    }\r\n    _transition(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* InternalTaskState.CANCELING */:\r\n            case \"pausing\" /* InternalTaskState.PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                else if (this.pendingTimeout) {\r\n                    clearTimeout(this.pendingTimeout);\r\n                    this.pendingTimeout = undefined;\r\n                    this.completeTransitions_();\r\n                }\r\n                break;\r\n            case \"running\" /* InternalTaskState.RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                const wasPaused = this._state === \"paused\" /* InternalTaskState.PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* InternalTaskState.PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* InternalTaskState.CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* InternalTaskState.ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* InternalTaskState.SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    }\r\n    completeTransitions_() {\r\n        switch (this._state) {\r\n            case \"pausing\" /* InternalTaskState.PAUSING */:\r\n                this._transition(\"paused\" /* InternalTaskState.PAUSED */);\r\n                break;\r\n            case \"canceling\" /* InternalTaskState.CANCELING */:\r\n                this._transition(\"canceled\" /* InternalTaskState.CANCELED */);\r\n                break;\r\n            case \"running\" /* InternalTaskState.RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * A snapshot of the current task state.\r\n     */\r\n    get snapshot() {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        return {\r\n            bytesTransferred: this._transferred,\r\n            totalBytes: this._blob.size(),\r\n            state: externalState,\r\n            metadata: this._metadata,\r\n            task: this,\r\n            ref: this._ref\r\n        };\r\n    }\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `StorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    on(type, nextOrObserver, error, completed) {\r\n        // Note: `type` isn't being used. Its type is also incorrect. TaskEvent should not be a string.\r\n        const observer = new Observer(nextOrObserver || undefined, error || undefined, completed || undefined);\r\n        this._addObserver(observer);\r\n        return () => {\r\n            this._removeObserver(observer);\r\n        };\r\n    }\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    then(onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    }\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    catch(onRejected) {\r\n        return this.then(null, onRejected);\r\n    }\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    _addObserver(observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    }\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    _removeObserver(observer) {\r\n        const i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    }\r\n    _notifyObservers() {\r\n        this._finishPromise();\r\n        const observers = this._observers.slice();\r\n        observers.forEach(observer => {\r\n            this._notifyObserver(observer);\r\n        });\r\n    }\r\n    _finishPromise() {\r\n        if (this._resolve !== undefined) {\r\n            let triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    const toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    }\r\n    _notifyObserver(observer) {\r\n        const externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    }\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    resume() {\r\n        const valid = this._state === \"paused\" /* InternalTaskState.PAUSED */ ||\r\n            this._state === \"pausing\" /* InternalTaskState.PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* InternalTaskState.RUNNING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    pause() {\r\n        const valid = this._state === \"running\" /* InternalTaskState.RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* InternalTaskState.PAUSING */);\r\n        }\r\n        return valid;\r\n    }\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    cancel() {\r\n        const valid = this._state === \"running\" /* InternalTaskState.RUNNING */ ||\r\n            this._state === \"pausing\" /* InternalTaskState.PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* InternalTaskState.CANCELING */);\r\n        }\r\n        return valid;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nclass Reference {\r\n    constructor(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    toString() {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    }\r\n    _newRef(service, location) {\r\n        return new Reference(service, location);\r\n    }\r\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\r\n    get root() {\r\n        const location = new Location(this._location.bucket, '');\r\n        return this._newRef(this._service, location);\r\n    }\r\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\r\n    get bucket() {\r\n        return this._location.bucket;\r\n    }\r\n    /**\r\n     * The full path of this object.\r\n     */\r\n    get fullPath() {\r\n        return this._location.path;\r\n    }\r\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\r\n    get name() {\r\n        return lastComponent(this._location.path);\r\n    }\r\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\r\n    get storage() {\r\n        return this._service;\r\n    }\r\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\r\n    get parent() {\r\n        const newPath = parent(this._location.path);\r\n        if (newPath === null) {\r\n            return null;\r\n        }\r\n        const location = new Location(this._location.bucket, newPath);\r\n        return new Reference(this._service, location);\r\n    }\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    _throwIfRoot(name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded bytes.\r\n */\r\nfunction getBytesInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBytes');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBytesConnection)\r\n        .then(bytes => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            bytes.slice(0, maxDownloadSizeBytes)\r\n        : bytes);\r\n}\r\n/**\r\n * Download the bytes at the object's location.\r\n * @returns A Promise containing the downloaded blob.\r\n */\r\nfunction getBlobInternal(ref, maxDownloadSizeBytes) {\r\n    ref._throwIfRoot('getBlob');\r\n    const requestInfo = getBytes$1(ref.storage, ref._location, maxDownloadSizeBytes);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newBlobConnection)\r\n        .then(blob => maxDownloadSizeBytes !== undefined\r\n        ? // GCS may not honor the Range header for small files\r\n            blob.slice(0, maxDownloadSizeBytes)\r\n        : blob);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n *\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytes');\r\n    const requestInfo = multipartUpload(ref.storage, ref._location, getMappings(), new FbsBlob(data, true), metadata);\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(finalMetadata => {\r\n        return {\r\n            metadata: finalMetadata,\r\n            ref\r\n        };\r\n    });\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - StorageReference where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the newly uploaded string.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString$1(ref, value, format = StringFormat.RAW, metadata) {\r\n    ref._throwIfRoot('uploadString');\r\n    const data = dataFromString(format, value);\r\n    const metadataClone = Object.assign({}, metadata);\r\n    if (metadataClone['contentType'] == null && data.contentType != null) {\r\n        metadataClone['contentType'] = data.contentType;\r\n    }\r\n    return uploadBytes$1(ref, data.data, metadataClone);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    const accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(() => accumulator);\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nasync function listAllHelper(ref, accumulator, pageToken) {\r\n    const opt = {\r\n        // maxResults is 1000 by default.\r\n        pageToken\r\n    };\r\n    const nextPage = await list$1(ref, opt);\r\n    accumulator.prefixes.push(...nextPage.prefixes);\r\n    accumulator.items.push(...nextPage.items);\r\n    if (nextPage.nextPageToken != null) {\r\n        await listAllHelper(ref, accumulator, nextPage.nextPageToken);\r\n    }\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    if (options != null) {\r\n        if (typeof options.maxResults === 'number') {\r\n            validateNumber('options.maxResults', \r\n            /* minValue= */ 1, \r\n            /* maxValue= */ 1000, options.maxResults);\r\n        }\r\n    }\r\n    const op = options || {};\r\n    const requestInfo = list$2(ref.storage, ref._location, \r\n    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    ref._throwIfRoot('getMetadata');\r\n    const requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    ref._throwIfRoot('updateMetadata');\r\n    const requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    ref._throwIfRoot('getDownloadURL');\r\n    const requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n    return ref.storage\r\n        .makeRequestWithTokens(requestInfo, newTextConnection)\r\n        .then(url => {\r\n        if (url === null) {\r\n            throw noDownloadURL();\r\n        }\r\n        return url;\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    ref._throwIfRoot('deleteObject');\r\n    const requestInfo = deleteObject$2(ref.storage, ref._location);\r\n    return ref.storage.makeRequestWithTokens(requestInfo, newTextConnection);\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    const newPath = child(ref._location.path, childPath);\r\n    const location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        const service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        const reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    const bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options = {}) {\r\n    storage.host = `${host}:${port}`;\r\n    storage._protocol = 'http';\r\n    const { mockUserToken } = options;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n *\r\n * @internal\r\n */\r\nclass FirebaseStorageImpl {\r\n    constructor(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._protocol = 'https';\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The host string for this service, in the form of `host` or\r\n     * `host:port`.\r\n     */\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(host) {\r\n        this._host = host;\r\n        if (this._url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(host, this.app.options);\r\n        }\r\n    }\r\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\r\n    get maxUploadRetryTime() {\r\n        return this._maxUploadRetryTime;\r\n    }\r\n    set maxUploadRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxUploadRetryTime = time;\r\n    }\r\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\r\n    get maxOperationRetryTime() {\r\n        return this._maxOperationRetryTime;\r\n    }\r\n    set maxOperationRetryTime(time) {\r\n        validateNumber('time', \r\n        /* minValue=*/ 0, \r\n        /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n        this._maxOperationRetryTime = time;\r\n    }\r\n    async _getAuthToken() {\r\n        if (this._overrideAuthToken) {\r\n            return this._overrideAuthToken;\r\n        }\r\n        const auth = this._authProvider.getImmediate({ optional: true });\r\n        if (auth) {\r\n            const tokenData = await auth.getToken();\r\n            if (tokenData !== null) {\r\n                return tokenData.accessToken;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    async _getAppCheckToken() {\r\n        const appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n        if (appCheck) {\r\n            const result = await appCheck.getToken();\r\n            // TODO: What do we want to do if there is an error getting the token?\r\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n            // the token (actual or dummy) to send requests.\r\n            return result.token;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    _delete() {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(request => request.cancel());\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    _makeStorageReference(loc) {\r\n        return new Reference(this, loc);\r\n    }\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    _makeRequest(requestInfo, requestFactory, authToken, appCheckToken, retry = true) {\r\n        if (!this._deleted) {\r\n            const request = makeRequest(requestInfo, this._appId, authToken, appCheckToken, requestFactory, this._firebaseVersion, retry);\r\n            this._requests.add(request);\r\n            // Request removes itself from set when complete.\r\n            request.getPromise().then(() => this._requests.delete(request), () => this._requests.delete(request));\r\n            return request;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    }\r\n    async makeRequestWithTokens(requestInfo, requestFactory) {\r\n        const [authToken, appCheckToken] = await Promise.all([\r\n            this._getAuthToken(),\r\n            this._getAppCheckToken()\r\n        ]);\r\n        return this._makeRequest(requestInfo, requestFactory, authToken, appCheckToken).getPromise();\r\n    }\r\n}\n\nconst name = \"@firebase/storage\";\nconst version = \"0.11.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nconst STORAGE_TYPE = 'storage';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise containing the object's bytes\r\n */\r\nfunction getBytes(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBytesInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadBytes(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytes$1(ref, data, metadata);\r\n}\r\n/**\r\n * Uploads a string to this object's location.\r\n * The upload is not resumable.\r\n * @public\r\n * @param ref - {@link StorageReference} where string should be uploaded.\r\n * @param value - The string to upload.\r\n * @param format - The format of the string to upload.\r\n * @param metadata - Metadata for the string to upload.\r\n * @returns A Promise containing an UploadResult\r\n */\r\nfunction uploadString(ref, value, format, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadString$1(ref, value, format, metadata);\r\n}\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - {@link StorageReference} where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\r\n * @public\r\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\r\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\r\n * If not passed, uses the app's default Storage Bucket.\r\n * @returns A {@link FirebaseStorage} instance.\r\n */\r\nfunction getStorage(app = getApp(), bucketUrl) {\r\n    app = getModularInstance(app);\r\n    const storageProvider = _getProvider(app, STORAGE_TYPE);\r\n    const storageInstance = storageProvider.getImmediate({\r\n        identifier: bucketUrl\r\n    });\r\n    const emulator = getDefaultEmulatorHostnameAndPort('storage');\r\n    if (emulator) {\r\n        connectStorageEmulator(storageInstance, ...emulator);\r\n    }\r\n    return storageInstance;\r\n}\r\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\r\n * token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options = {}) {\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Downloads the data at the object's location. Returns an error if the object\r\n * is not found.\r\n *\r\n * To use this functionality, you have to whitelist your app's origin in your\r\n * Cloud Storage bucket. See also\r\n * https://cloud.google.com/storage/docs/configuring-cors\r\n *\r\n * This API is not available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A Promise that resolves with a Blob containing the object's bytes\r\n */\r\nfunction getBlob(ref, maxDownloadSizeBytes) {\r\n    ref = getModularInstance(ref);\r\n    return getBlobInternal(ref, maxDownloadSizeBytes);\r\n}\r\n/**\r\n * Downloads the data at the object's location. Raises an error event if the\r\n * object is not found.\r\n *\r\n * This API is only available in Node.\r\n *\r\n * @public\r\n * @param ref - StorageReference where data should be downloaded.\r\n * @param maxDownloadSizeBytes - If set, the maximum allowed size in bytes to\r\n * retrieve.\r\n * @returns A stream with the object's data as bytes\r\n */\r\nfunction getStream(ref, maxDownloadSizeBytes) {\r\n    throw new Error('getStream() is only supported by NodeJS builds');\r\n}\n\n/**\r\n * Cloud Storage for Firebase\r\n *\r\n * @packageDocumentation\r\n */\r\nfunction factory(container, { instanceIdentifier: url }) {\r\n    const app = container.getProvider('app').getImmediate();\r\n    const authProvider = container.getProvider('auth-internal');\r\n    const appCheckProvider = container.getProvider('app-check-internal');\r\n    return new FirebaseStorageImpl(app, authProvider, appCheckProvider, url, SDK_VERSION);\r\n}\r\nfunction registerStorage() {\r\n    _registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\r\n    //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\r\n    registerVersion(name, version, '');\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\r\nregisterStorage();\n\nexport { StorageError, StorageErrorCode, StringFormat, FbsBlob as _FbsBlob, Location as _Location, TaskEvent as _TaskEvent, TaskState as _TaskState, UploadTask as _UploadTask, dataFromString as _dataFromString, _getChild, invalidArgument as _invalidArgument, invalidRootOperation as _invalidRootOperation, connectStorageEmulator, deleteObject, getBlob, getBytes, getDownloadURL, getMetadata, getStorage, getStream, list, listAll, ref, updateMetadata, uploadBytes, uploadBytesResumable, uploadString };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","//ФОРМА ДЛЯ МОДАЛКИ\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyDfeym0N_eZN2n6rzYkKoQ696mperZxcmw',\r\n  authDomain: 'starpage-5c9b4.firebaseapp.com',\r\n  projectId: 'starpage-5c9b4',\r\n  storageBucket: 'starpage-5c9b4.appspot.com',\r\n  messagingSenderId: '184753612882',\r\n  appId: '1:184753612882:web:bec6c0c33ae95456d7d78b',\r\n  measurementId: 'G-P1Z1MQSFZJ',\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nconst storage = getStorage(app)\r\n\r\nconsole.log('main storeage', storage)\r\n\r\nexport default storage\r\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.9\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.21.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME);\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        return db\r\n            .transaction(STORE_NAME)\r\n            .objectStore(STORE_NAME)\r\n            .get(computeKey(app));\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        return tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (this._heartbeatsCache === null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (this._heartbeatsCache === null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            return idbHeartbeatObject || { heartbeats: [] };\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"9.21.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n__webpack_require__(\"./public/js/dev/server.js\");\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./node_modules/firebase/app/dist/esm/index.esm.js\");\n"],"names":["DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","StorageError","FirebaseError","constructor","code","message","status_","super","prependCode","this","customData","serverResponse","_baseMessage","Object","setPrototypeOf","prototype","status","_codeEquals","StorageErrorCode","ErrorCode","unknown","UNKNOWN","retryLimitExceeded","RETRY_LIMIT_EXCEEDED","canceled","CANCELED","cannotSliceBlob","CANNOT_SLICE_BLOB","invalidArgument","INVALID_ARGUMENT","appDeleted","APP_DELETED","invalidRootOperation","name","INVALID_ROOT_OPERATION","invalidFormat","format","INVALID_FORMAT","internalError","INTERNAL_ERROR","Location","bucket","path","path_","isRoot","length","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","static","bucketString","host","bucketLocation","makeFromUrl","e","INVALID_DEFAULT_BUCKET","url","location","bucketDomain","gsRegex","RegExp","httpModify","loc","decodeURIComponent","firebaseStorageHost","replace","groups","regex","indices","postModify","charAt","slice","i","group","captures","exec","bucketValue","pathValue","INVALID_URL","invalidUrl","FailRequest","error","promise_","Promise","reject","getPromise","cancel","_appDelete","isString","p","String","isNativeBlob","isNativeBlobDefined","Blob","isNode","validateNumber","argument","minValue","maxValue","value","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","key","hasOwnProperty","isRetryStatusCode","additionalRetryCodes","isFiveHundredCode","isExtraRetryCode","indexOf","isAdditionalRetryCode","NetworkRequest","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","retry","pendingConnection_","backoffId_","canceled_","appDelete_","resolve","resolve_","reject_","start_","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","then","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","wasCanceled","ABORT","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","getResponse","err","getErrorText","doRequest","backoffCompleteCb","timeout","waitSeconds","retryTimeoutId","globalTimeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","apply","callWithDelay","millis","setTimeout","responseHandler","clearGlobalTimeout","clearTimeout","success","call","waitMillis","Math","random","stopped","stop","wasTimeout","start","appDelete","abort","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob$1","undefined","bb","append","getBlob","UNSUPPORTED_ENVIRONMENT","decodeBase64","encoded","atob","polyFill","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","DataURLParts","base64","rest","decoded","percentEncodedBytes_","dataURLBytes_","b","c","charCodeAt","push","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","bytes","includes","array","dataURL","matches","match","middle","s","end","substring","endsWith","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","buffer","blobby","map","val","uint8Arrays","finalLength","forEach","merged","index","uploadData","jsonObjectOrNull","obj","JSON","parse","Array","isArray","lastComponent","lastIndexOf","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","service","resource","len","mapping","defineProperty","get","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","PREFIXES_KEY","ITEMS_KEY","fromResponseString","listResult","prefixes","items","nextPageToken","pathWithoutTrailingSlash","reference","item","fromBackendResponse","RequestInfo","method","handler","urlParams","headers","body","errorHandler","progressCallback","successCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","UNAUTHORIZED_APP","UNAUTHENTICATED","QUOTA_EXCEEDED","UNAUTHORIZED","objectErrorHandler","shared","OBJECT_NOT_FOUND","getMetadata$2","maxOperationRetryTime","requestInfo","list$2","delimiter","pageToken","maxResults","listHandler","getBytes$1","maxDownloadSizeBytes","_","metadataForUpload_","metadataClone","assign","determineContentType_","multipartUpload","boundary","str","toString","genBoundary","metadata_","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","getResponseHeader","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","SERVER_FILE_WRONG_SIZE","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","ERROR","taskStateFromInternalTaskState","state","Observer","nextOrObserver","complete","next","observer","async","f","argsToForward","textFactoryOverride","XhrConnection","sent_","xhr_","XMLHttpRequest","initXhr","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","response","statusText","header","listener","upload","removeEventListener","XhrTextConnection","responseType","newTextConnection","XhrBytesConnection","newBytesConnection","XhrBlobConnection","newBlobConnection","UploadTask","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","backoffExpired","isExponentialBackoffExpired","sleepTime","max","_transition","_metadataErrorHandler","maxSleepTime","storage","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","pendingTimeout","_continueUpload","_oneShotUpload","_resolveToken","callback","all","_getAuthToken","_getAppCheckToken","authToken","appCheckToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","snapshot","externalState","bytesTransferred","totalBytes","task","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","triggered","bind","resume","valid","pause","Reference","_service","_newRef","root","parent","newPath","_throwIfRoot","uploadBytes$1","makeRequestWithTokens","finalMetadata","listAll$1","accumulator","listAllHelper","opt","nextPage","list$1","options","op","updateMetadata$1","updateMetadata$2","getDownloadURL$1","getDownloadUrl","NO_DOWNLOAD_URL","deleteObject$1","_xhr","_text","deleteObject$2","_getChild$1","childPath","canonicalChildPath","filter","component","join","child","refFromPath","FirebaseStorageImpl","_bucket","NO_DEFAULT_BUCKET","ref$1","serviceOrRef","pathOrUrl","test","extractBucket","config","makeFromBucketSpec","app","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","_overrideAuthToken","auth","getImmediate","optional","tokenData","getToken","accessToken","appCheck","_delete","request","clear","requestFactory","appId","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","add","delete","version","STORAGE_TYPE","getBytes","getBytesInternal","getModularInstance","uploadBytes","uploadString","uploadString$1","uploadBytesResumable","uploadBytesResumable$1","getMetadata","getMetadata$1","updateMetadata","list","listAll","getDownloadURL","deleteObject","_getChild","getStorage","getApp","bucketUrl","storageInstance","_getProvider","identifier","emulator","getDefaultEmulatorHostnameAndPort","connectStorageEmulator","port","mockUserToken","createMockUserToken","projectId","connectStorageEmulator$1","getBlobInternal","getStream","Error","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","SDK_VERSION","_registerComponent","Component","setMultipleInstances","registerVersion","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","assertionError","stringToByteArray$1","out","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","encodeByteArray","input","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","pos","c1","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","DecodeBase64StringError","arguments","base64Encode","utf8Bytes","base64urlEncodeWithoutPadding","base64Decode","deepCopy","deepExtend","target","source","Date","getTime","prop","getGlobal","self","window","g","getDefaults","__FIREBASE_DEFAULTS__","process","env","defaultsJsonString","getDefaultsFromEnvVariable","document","cookie","getDefaultsFromCookie","getDefaultEmulatorHost","productName","_a","_b","emulatorHosts","separatorIndex","parseInt","getDefaultAppConfig","getExperimentalSetting","Deferred","promise","wrapCallback","uid","project","iat","sub","user_id","payload","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","getUA","navigator","isMobileCordova","forceEnvironment","isBrowser","isBrowserExtension","runtime","chrome","browser","id","isReactNative","isElectron","isIE","ua","isUWP","isNodeSdk","isSafari","userAgent","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","onsuccess","close","deleteDatabase","onupgradeneeded","onerror","areCookiesEnabled","cookieEnabled","captureStackTrace","ErrorFactory","create","serviceName","errors","fullCode","template","PATTERN","replaceTemplate","fullMessage","jsonEval","decode","claims","signature","isValidTimestamp","now","floor","validSince","validUntil","issuedAtTime","isValidFormat","isAdmin","contains","safeGet","isEmpty","fn","contextObj","res","deepEqual","a","aKeys","keys","bKeys","k","aProp","bProp","isObject","thing","promiseWithTimeout","timeInMS","deferredPromise","querystring","querystringParams","entries","arrayVal","querystringDecode","extractQuerystring","queryStart","fragmentStart","Sha1","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","offset","W","t","d","update","lengthMinusBlock","n","inbuf","digest","totalBits","j","createSubscribe","executor","onNoObservers","proxy","ObserverProxy","subscribe","observers","unsubscribes","observerCount","forEachObserver","methods","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","sendOne","console","onError","validateArgCount","fnName","minCount","maxCount","argCount","argError","errorPrefix","argName","validateNamespace","namespace","validateCallback","argumentName","validateContextObject","context","stringToByteArray","high","stringLength","uuidv4","r","DEFAULT_INTERVAL_MILLIS","DEFAULT_BACKOFF_FACTOR","MAX_VALUE_MILLIS","RANDOM_FACTOR","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","pow","randomWait","round","ordinal","isFinite","abs","cent","dec","indicator","_delegate","initializeApp","apiKey","authDomain","storageBucket","messagingSenderId","measurementId","PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","provider","getComponent","isVersionServiceProvider","library","logString","name$o","version$1","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","Map","_components","_addComponent","addComponent","debug","_addOrOverwriteComponent","addOrOverwriteComponent","componentName","has","values","heartbeatController","triggerHeartbeat","_removeServiceInstance","clearInstance","_clearComponents","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","appName","rawConfig","existingApp","ComponentContainer","newApp","getApps","from","deleteApp","libraryKeyOrName","variant","libraryMismatch","versionMismatch","warning","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","db","oldVersion","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","tx","transaction","objectStore","put","computeKey","done","idbGetError","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","some","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","heartbeatEntry","find","hb","dates","countBytes","pop","extractHeartbeatsForHeader","headerString","toISOString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setServiceProps","props","setInstanceCreatedCallback","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","setComponent","isComponentEager","instanceDeferred","services","INTERNAL","isComponentSet","getOptions","initialize","opts","onInit","existingCallbacks","existingInstance","invokeOnInitCallbacks","callbacks","providers","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","_logLevel","_logHandler","_userLogHandler","TypeError","logHandler","userLogHandler","log","info","level","inst","customLogLevel","arg","ignored","toLowerCase","blocked","blocking","terminated","openPromise","w","event","newVersion","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","storeName","store","shift","oldTraps","receiver","instanceOfAny","object","constructors","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","IDBTransaction","objectStoreNames","wrap","replaceTraps","wrapFunction","func","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","sort","transformCachableValue","unlisten","DOMException","cacheDonePromiseForTransaction","Proxy","IDBRequest","promisifyRequest","newValue","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","enumerable","globalThis","Function","Symbol","toStringTag"],"sourceRoot":""}